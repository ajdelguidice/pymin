v1.0.6
Fixed buttonpanel width
Switched frames to tkinter.Frame instead of tkinter.ttk.Frame so that I could change the background colour directly
Removed the background colour labels and the ttk import as they aren't needed anymore
Temporarily disabled window resizing as it doesn't work anyways
Temporarily locked the aspect ratio just in case the previous fix fails
Remove unnecessary functions in my lists extension class
Removed functions I added at the beggining of the project but are no longer needed
Removed code that I commented out but forgot to remove
Optimized doWeight
Optimized doHP
Optimized doLust
Fixed dojizzpants not triggering correctly when going back to dogeneral from areas
Fixed dojizzpants next button having to be pressed twice
Fixed checkStash

v1.0.5
Made shops always go back to themselves instead of going back to the another shop in some cases
Fixed a bug with the apothecary
Fixed a bug with the Tailor
Optimized itemName, usableItem, itemValue, itemMaxStack, foodItem
Fixed Milking Machine (Item)
Added ,0 to the end of all max() functions with only one input because python can't handle only one input
Added a missing global varible definition to affinityChange
Fixed Arrat.concat()
Made Save Game, Load Game, and New Game buttons appear and disappear when they are supposed to
Fixed a couple of bugs with doProstitute
Fixed a couple of bugs with doLevelUP
Fixed checkOpenSlot to find first open slot not last open slot
Fixed hotkeys being able to press disabled buttons
Fix levels not saving
Fix bug with amounts not showing sometimes
Fixed a bug with checkMagicItem
Remove a bunch of the this. statements that I missed
Fixed a bug with doDairyFarm
Fixed a bug with eventSelect
Fixed the cancel button in itemUse for item 213
(Should be fixed) Fixed lust sometimes becoming a random float value
(Should be fixed) Fixed shapshifty so it only increases one affinity (very inconsistantly happened with equan and random others)
Fixed a couple of spelling mistake in doProstitute
Fixed a bug in enemyAttack for enemy 102
Optimized item 108 so it wasn't unbearably slow to use

v1.0.4
Fixed bug with item buying/selling

v1.0.3
Fixed bag/stash navigation
Fixed keysUp function

v1.0.2rev2
Fixed platform import

v1.0.2rev1
Made hotkeys only work on systems that I've tried and made a placeholder for the rest (keycodes are system dependent but I'm not sure if tkinter is picky about linux distributions (only tried on debian and fedora so far)). All keycodes that I can get are based off of US standard keyboards and [this table](http://gcctech.org/csc/javascript/javascript_keycodes.htm).

v1.0.2
(Mostly) Fixed hotkeys
Broke bag/stash navigation
Fixed item moving, broke bag/stash navigation after moving items so don't move items for now

v1.0.1
Fixed bug where save converter buttons wouldn't go away
Switched from using tkinter.ScrolledText to tkhtmlview.HTMLScrolledText (font styling should work now)

v1.0.0
Changed str variable to _str_ because it conflicts with a built in function
Rearranged some statements to make more sense
Converted variables before displaying them to the screen because "TypeError: can only concatenate str (not 'int') to str"
Changed "\r" to "\n" becuase python uses universal backslash expressions instead of adobe's bullshit
Replaced "||" with or and "&&" with "and"
Removed "this." becuase it isn't needed
Commented out unused parts of the origional code instead of removing them
Interface rewritten in tkinter becuase it looked the most similar to the origional
Removed backslashes before single quotes where they weren't necessary because python knows how to handle single quotes within double quotes and can tell the difference between the two
Global statements everywhere because python is a local default language
Pointed functions to the correct place in python (ex: in flash it's Math.random() but in python it's random.random())
Save data and preferences are now stored in xml format instead of shared objects because I couldn't find any libraries for action messaging format that still worked. If I get arround to it, I might make my own library or at least make a way to convert old save files to new ones but that is a lot of work and amf is very confusing
Remade images 1 and 2 to be centered
Added addManyItems command to replace multiple itemAdd functions with the same item next to each other
Merged some redundant if statements
Created a disable button function to disable buttons when not used but on screen
Changed shops to use disable button functions for empty slots
Rearranged post-increment statements to work in python
Added function to mimic how numbers were displayed in actionscript (numbers were displayed as floats unless there was nothing after the decimal point)
Added savefile converter into load game screen

detailedStats
- Changed hip size multiplier variable to be what it says instead of something else

passiveItemRemove
- Changed (ID == num and weapon == num) to (ID == weapon == num)

doSleep
- Replaced the Boolean() call with what is used everywhere else

simpleAlchemy
- Removed newline charater in the second to last recipy description to be consistant with the rest

advancedAlchemy
- Added newline character to the final 3 recipy descriptions to be consistant with the rest

enemyAttack
- Fixed enemy 102 not subtracting the correct thing

doStatus
- Continued optimizing the if else statements from where Xadera left off

aff
- Removed redundant line

affinityChange
- Fixed a spelling mistake

doItemUse
- Added "Do Nothing" option to bug egg
- Removed a redundant if statement in item 528

doLevelUP
- Fixed some spelling errors

plural
- Removed redundant if statements

udderDesc
- Replaced the repeated multiplication in each statement with a variable used to calculate it once

buttDesc
- Replaced the repeated multiplication in each statement with a variable used to calculate it once

hipDesc
- Replaced the repeated multiplication in each statement with a variable used to calculate it once

bellyDesc
- Removed redundant if statements

legDesc
- Combined redundant if statements

genName
- Rearranged if statements to look nicer and do less checks

eventSelect
- Added placeholders at the end of arrays that didn't have enough values to prevent errors
